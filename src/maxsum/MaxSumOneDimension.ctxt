#BlueJ class context
comment0.target=MaxSumOneDimension
comment1.params=a
comment1.target=int\ maxSubSum1(int[])
comment1.text=\r\n\ Cubic\ maximum\ contiguous\ subsequence\ sum\ algorithm.\r\n\ seqStart\ and\ seqEnd\ represent\ the\ actual\ best\ sequence.\r\n
comment2.params=a
comment2.target=int\ maxSubSum2(int[])
comment2.text=\r\n\ Quadratic\ maximum\ contiguous\ subsequence\ sum\ algorithm.\r\n\ seqStart\ and\ seqEnd\ represent\ the\ actual\ best\ sequence.\r\n
comment3.params=a
comment3.target=int\ maxSubSum3(int[])
comment3.text=\r\n\ Linear-time\ maximum\ contiguous\ subsequence\ sum\ algorithm.\r\n\ seqStart\ and\ seqEnd\ represent\ the\ actual\ best\ sequence.\r\n
comment4.params=a\ left\ right
comment4.target=int\ maxSumRec(int[],\ int,\ int)
comment4.text=\r\n\ Recursive\ maximum\ contiguous\ subsequence\ sum\ algorithm.\r\n\ Finds\ maximum\ sum\ in\ subarray\ spanning\ a[left..right].\r\n\ Does\ not\ attempt\ to\ maintain\ actual\ best\ sequence.\r\n
comment5.params=a\ b\ c
comment5.target=int\ max3(int,\ int,\ int)
comment5.text=\r\n\ Return\ maximum\ of\ three\ integers.\r\n
comment6.params=a
comment6.target=int\ maxSubSum4(int[])
comment6.text=\r\n\ Driver\ for\ divide-and-conquer\ maximum\ contiguous\r\n\ subsequence\ sum\ algorithm.\r\n
comment7.params=n\ alg
comment7.target=void\ getTimingInfo(int,\ int)
comment8.params=args
comment8.target=void\ main(java.lang.String[])
comment8.text=\r\n\ Simple\ test\ program.\r\n
numComments=9
