#BlueJ class context
comment0.params=frame\ bgColour
comment0.target=Canvas(javax.swing.JFrame,\ java.awt.Color)
comment0.text=\r\n\ Create\ a\ Canvas.\r\n\ @param\ frame\ \ the\ frame\ that\ will\ contain\ this\ canvas\r\n\ @\ width\ \ the\ desired\ width\ for\ the\ canvas\r\n\ @\ height\ \ the\ desired\ height\ for\ the\ canvas\r\n\ @\ bgClour\ \ the\ desired\ background\ colour\ of\ the\ canvas\r\n
comment1.params=visible
comment1.target=void\ setVisible(boolean)
comment1.text=\r\n\ Set\ the\ canvas\ visibility\ and\ brings\ canvas\ to\ the\ front\ of\ screen\r\n\ when\ made\ visible.\ This\ method\ can\ also\ be\ used\ to\ bring\ an\ already\r\n\ visible\ canvas\ to\ the\ front\ of\ other\ windows.\r\n\ @param\ visible\ \ boolean\ value\ representing\ the\ desired\ visibility\ of\r\n\ the\ canvas\ (true\ or\ false)\ \r\n
comment10.params=text\ x\ y
comment10.target=void\ eraseString(java.lang.String,\ int,\ int)
comment10.text=\r\n\ Erases\ a\ String\ on\ the\ Canvas.\r\n\ @param\ \ text\ \ \ \ \ the\ String\ to\ be\ displayed\ \r\n\ @param\ \ x\ \ \ \ \ \ \ \ x\ co-ordinate\ for\ text\ placement\ \r\n\ @param\ \ y\ \ \ \ \ \ \ \ y\ co-ordinate\ for\ text\ placement\r\n
comment11.params=x1\ y1\ x2\ y2
comment11.target=void\ drawLine(int,\ int,\ int,\ int)
comment11.text=\r\n\ Draws\ a\ line\ on\ the\ Canvas.\r\n\ @param\ \ x1\ \ \ x\ co-ordinate\ of\ start\ of\ line\ \r\n\ @param\ \ y1\ \ \ y\ co-ordinate\ of\ start\ of\ line\ \r\n\ @param\ \ x2\ \ \ x\ co-ordinate\ of\ end\ of\ line\ \r\n\ @param\ \ y2\ \ \ y\ co-ordinate\ of\ end\ of\ line\ \r\n
comment12.params=newColour
comment12.target=void\ setForegroundColour(java.awt.Color)
comment12.text=\r\n\ Sets\ the\ foreground\ colour\ of\ the\ Canvas.\r\n\ @param\ \ newColour\ \ \ the\ new\ colour\ for\ the\ foreground\ of\ the\ Canvas\ \r\n
comment13.params=
comment13.target=java.awt.Color\ getForegroundColour()
comment13.text=\r\n\ Returns\ the\ current\ colour\ of\ the\ foreground.\r\n\ @return\ \ \ the\ colour\ of\ the\ foreground\ of\ the\ Canvas\ \r\n
comment14.params=newColour
comment14.target=void\ setBackgroundColour(java.awt.Color)
comment14.text=\r\n\ Sets\ the\ background\ colour\ of\ the\ Canvas.\r\n\ @param\ \ newColour\ \ \ the\ new\ colour\ for\ the\ background\ of\ the\ Canvas\ \r\n
comment15.params=
comment15.target=java.awt.Color\ getBackgroundColour()
comment15.text=\r\n\ Returns\ the\ current\ colour\ of\ the\ background\r\n\ @return\ \ \ the\ colour\ of\ the\ background\ of\ the\ Canvas\ \r\n
comment16.params=width\ height
comment16.target=void\ setSize(int,\ int)
comment16.text=\r\n\ Sets\ the\ size\ of\ the\ canvas.\r\n\ @param\ \ width\ \ \ \ new\ width\ \r\n\ @param\ \ height\ \ \ new\ height\ \r\n
comment17.params=milliseconds
comment17.target=void\ wait(int)
comment17.text=\r\n\ Waits\ for\ a\ specified\ number\ of\ milliseconds\ before\ finishing.\r\n\ This\ provides\ an\ easy\ way\ to\ specify\ a\ small\ delay\ which\ can\ be\r\n\ used\ when\ producing\ animations.\r\n\ @param\ \ milliseconds\ \ the\ number\ \r\n
comment18.params=g
comment18.target=void\ paint(java.awt.Graphics)
comment2.params=
comment2.target=boolean\ isVisible()
comment2.text=\r\n\ Provide\ information\ on\ visibility\ of\ the\ Canvas.\r\n\ @return\ \ true\ if\ canvas\ is\ visible,\ false\ otherwise\r\n
comment3.params=shape
comment3.target=void\ draw(java.awt.Shape)
comment3.text=\r\n\ Draw\ the\ outline\ of\ a\ given\ shape\ onto\ the\ canvas.\r\n\ @param\ \ shape\ \ the\ shape\ object\ to\ be\ drawn\ on\ the\ canvas\r\n
comment4.params=shape
comment4.target=void\ fill(java.awt.Shape)
comment4.text=\r\n\ Fill\ the\ internal\ dimensions\ of\ a\ given\ shape\ with\ the\ current\ \r\n\ foreground\ colour\ of\ the\ canvas.\r\n\ @param\ \ shape\ \ the\ shape\ object\ to\ be\ filled\ \r\n
comment5.params=
comment5.target=void\ erase()
comment5.text=\r\n\ Erase\ the\ whole\ canvas.\r\n
comment6.params=shape
comment6.target=void\ erase(java.awt.Shape)
comment6.text=\r\n\ Erase\ a\ given\ shape's\ interior\ on\ the\ screen.\r\n\ @param\ \ shape\ \ the\ shape\ object\ to\ be\ erased\ \r\n
comment7.params=shape
comment7.target=void\ eraseOutline(java.awt.Shape)
comment7.text=\r\n\ Erases\ a\ given\ shape's\ outline\ on\ the\ screen.\r\n\ @param\ \ shape\ \ the\ shape\ object\ to\ be\ erased\ \r\n
comment8.params=image\ x\ y
comment8.target=boolean\ drawImage(java.awt.Image,\ int,\ int)
comment8.text=\r\n\ Draws\ an\ image\ onto\ the\ canvas.\r\n\ @param\ \ image\ \ \ the\ Image\ object\ to\ be\ displayed\ \r\n\ @param\ \ x\ \ \ \ \ \ \ x\ co-ordinate\ for\ Image\ placement\ \r\n\ @param\ \ y\ \ \ \ \ \ \ y\ co-ordinate\ for\ Image\ placement\ \r\n\ @return\ \ returns\ boolean\ value\ representing\ whether\ the\ image\ was\ \r\n\ \ \ \ \ \ \ \ \ \ completely\ loaded\ \r\n
comment9.params=text\ x\ y
comment9.target=void\ drawString(java.lang.String,\ int,\ int)
comment9.text=\r\n\ Draws\ a\ String\ on\ the\ Canvas.\r\n\ @param\ \ text\ \ \ the\ String\ to\ be\ displayed\ \r\n\ @param\ \ x\ \ \ \ \ \ x\ co-ordinate\ for\ text\ placement\ \r\n\ @param\ \ y\ \ \ \ \ \ y\ co-ordinate\ for\ text\ placement\r\n
numComments=19
